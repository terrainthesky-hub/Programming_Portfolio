{"pageProps":{"postData":{"id":"2024-6-29-Local-LLM-Discord-Bot","contentHtml":"<p>So I decided to make a discord bot that uses a locally running Large Language Model. In this case, I used gemma2:9b, a lightweight, low parameter LLM that can be\nrun with limited VRAM (llama70b needs at least 120 GB of VRAM to run at a reasonable speed). I installed it using <a href=\"https://ollama.com/\">Ollama</a>. Once you've downloaded and installed Ollama,\npull the LLM model you want in your terminal with a similar command.</p>\n<pre><code>ollama pull gemma2:9b\n</code></pre>\n<p>After, type this to run it locally.</p>\n<pre><code>ollama run gemma2\n</code></pre>\n<p>Now you can run the model locally and send it messages:</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/22f44025-6a81-4213-bb84-d45560706bd2\" alt=\"image\"></p>\n<p>Once you've done that it's time to set up Discord. You're going to want to go to <a href=\"https://discord.com/developers/applications\">Discord Applications and log in</a>.\nOnce there, select \"New Application\" button.</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/54a7f256-278d-4a0f-a14e-f0e727fe4b45\" alt=\"image\"></p>\n<p>Click on bot on the left tab and set up the following options. Name your bot, mine is LocalGemma2Bot.</p>\n<p>Turn on Oauth2 Code Grant</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/96ecda14-dc27-48b9-a878-58f861e9d83a\" alt=\"image\"></p>\n<p>Then set Message Content Intent to True:</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/9a65a6b1-f708-4ec7-84de-05837a644c11\" alt=\"image\"></p>\n<p>Now go to OAuth2 on the left tab. And under URL Generator Select \"bot\".</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/18b0beba-bea3-4cb1-8420-464e1b7f2240\" alt=\"image\"></p>\n<p>Under Bot Permissions select Send Messages and Read Message History.</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/07fe2f32-78c0-42d2-bc70-af0f84138e52\" alt=\"image\"></p>\n<p>Copy the generated URL at the bottom and go to that webpage. Now you can add the bot to a server:</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/1199fde3-3750-4d64-9c0d-d1ba29f1292e\" alt=\"image\"></p>\n<p>You'll want to take note of the bot token on the bot page on from the left tab to save for later. Now you're ready to write the Python code. Create a bot.py file, and here is code for the defaulted Ollama gemma2 settings:</p>\n<pre><code>import os\nfrom dotenv import load_dotenv\nimport json\nimport discord\nimport requests\n\nload_dotenv()\n\nintents = discord.Intents.default()\nintents.message_content = True\nclient = discord.Client(intents=intents)\n\nDISCORD_TOKEN = os.getenv('DISCORD_TOKEN')\nOLLAMA_API_URL = os.getenv('OLLAMA_API_URL')\n\n@client.event\nasync def on_message(message):\n    if message.author == client.user:\n        return\n\n    if message.content.startswith('!ask '):\n        query = message.content[5:]\n        \n        payload = {\n            'model': 'gemma2',\n            'prompt': query\n        }\n        \n        response = requests.post(OLLAMA_API_URL, json=payload)\n        \n        if response.status_code == 200:\n            try:\n                json_objects = response.text.split('\\n')\n                responses = []\n                for obj in json_objects:\n                    if obj.strip():\n                        parsed_obj = json.loads(obj)\n                        responses.append(parsed_obj['response'])\n                \n                final_response = ''.join(responses)\n                await message.channel.send(final_response)\n            except ValueError as e:\n                await message.channel.send(\"Sorry, I couldn't parse the response from the LLM.\")\n        else:\n            await message.channel.send(\"Sorry, I couldn't get a response from the LLM.\")\n\nclient.run(DISCORD_TOKEN)\n</code></pre>\n<p>This script will send your discord bot's query to your local machine where it will return the local LLM's series of tokens, combine and clean those json token responses,\nand send them to the channel.</p>\n<p>For proper security, set up a .env file, and grab your discord bot token from the discord webpage under the bot tab and enter this into your .env:</p>\n<pre><code>  DISCORD_TOKEN=YOUR_DISCORD_TOKEN_HERE\n</code></pre>\n<p>Also add your Ollama_Api_Url variable to the .env file as well, but you'll want to generate your own port:</p>\n<pre><code>  OLLAMA_API_URL=http://localhost:YOUR_PORT_NUMBER_HERE/api/generate\n  \n</code></pre>\n<p>Once you've created this .env file and bot.py file, create a pip environment and install the following dependencies.</p>\n<pre><code>  pip install requests\n  pip install discord\n  pip install python-dotenv\n</code></pre>\n<p>Now you're ready to run your bot from the terminal by running the bot.py Python script. Use !ask MESSAGE_HERE in discord to query the bot.</p>\n<p><img src=\"https://github.com/terrainthesky-hub/terrainthesky-hub.github.io/assets/60892621/f413b6d2-994c-48f1-9167-72df26d460dc\" alt=\"image\"></p>\n"}},"__N_SSG":true}